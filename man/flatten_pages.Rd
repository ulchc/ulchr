% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flatten_pages.R
\name{flatten_pages}
\alias{flatten_pages}
\title{Structure pages of text into tabular form}
\usage{
flatten_pages(page_list, by = c("page", "paragraph", "line"))
}
\arguments{
\item{page_list}{A vector of characters (assumed to represent pages of text).}

\item{by}{One of: \code{c("page", "paragraph", "line")} or a custom string to split text into rows.}
}
\value{
A tibble with columns \code{page}, \code{index}, and \code{value}.
}
\description{
Converts a character vector into a tibble with each row representing
a page, paragraph, or line of text. A string other than \code{page}, \code{paragraph}, or
\code{line} can be supplied to the \code{by} argument to separate text into rows using
that string.
}
\details{
This function was written for use with \code{\link[pdftools:pdftools]{pdftools::pdf_text()}} or
\code{\link[pdftools:pdf_ocr]{pdftools::pdf_ocr_text()}}, meaning that each item in the character vector is
assumed to be a page and is labeled as such on the returned tibble. If each
item is not representative of a page, the page column will only represent the
index of the original character vector.
}
\examples{
\dontrun{
# return the R manual folder path
r_manual_dir <- paste0(R.home("doc"), .Platform$file.sep, "manual")

# return the first pdf manual in the directory
latest_match <- files_matching(r_manual_dir, "pdf")$path[1]

manual_text <- pdftools::pdf_text(latest_match)

flatten_pages(manual_text, by = "page")
flatten_pages(manual_text, by = "line")
flatten_pages(manual_text, by = "paragraph")
flatten_pages(manual_text, by = ":")
}
}
