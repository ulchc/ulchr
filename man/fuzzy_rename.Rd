% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_rename.R
\name{fuzzy_rename}
\alias{fuzzy_rename}
\title{Rename columns with fuzzy matching}
\usage{
fuzzy_rename(data, match_with)
}
\arguments{
\item{data}{A data frame or tibble.}

\item{match_with}{A data frame, tibble, or vector of characters.}
}
\value{
A renamed data frame or tibble.
}
\description{
Changes the names of all variables in \code{data} to the closest matches in
\code{match_with} using \code{\link[=fuzzy_match]{fuzzy_match()}}.
}
\examples{

library(dplyr)

data <- tibble(
  ID     = "5.1.0",
  Code   = "222",
  Name   = "Book",
  Day    = "Friday",
  Month  = "APR",
  Amount = "19.00"
)

messy_data <- tibble(
  `Amount $`           = "20.00",
  `Month (MMM) `       = "MAY",
  `Day of \n the week` = "Saturday",
  `Product\nName`      = "Notebook",
   Barcode             = "223",
  `ID #`               = "5.1.1"
)

# underlying data is equivalent, but naming conventions are not
messy_data
data

# no names are compatible between sources
tibble(names(data), names(messy_data))
# all names matched when using fuzzy_rename
tibble(names(data), names(fuzzy_rename(messy_data, names(data))))

# automatically match, reorder, and combine
messy_data \%>\%
  fuzzy_rename(data) \%>\%
  select(names(data)) \%>\%
  rbind(data)
}
\seealso{
\code{\link[=fuzzy_match]{fuzzy_match()}}
}
