% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fuzzy_match.R
\name{fuzzy_match}
\alias{fuzzy_match}
\title{Fuzzy match two character vectors}
\usage{
fuzzy_match(swap_out, swap_in)
}
\arguments{
\item{swap_out}{A vector of characters.}

\item{swap_in}{A vector of characters >= \code{length(swap_out)}.}
}
\value{
A character vector equal in length to \code{swap_out}.
}
\description{
Substitutes all elements of \code{swap_out} with one from \code{swap_in}. All
perfect matches are immediately substituted, with proceeding matches
assigned based on the smallest string distance computed across the remainder
of \code{swap_out} and \code{swap_in}.
}
\details{
When two or more matches have equivalent total string distances, the \code{swap_in}
term with the maximum variance across all remaining \code{swap_out} terms will proceed.
In doing so, the most distinct term is removed from the set of potential matches
so as to leave the terms with the most overlap to the end of the matching sequence.

Implements the running cosine matching algorithm from \code{\link[stringdist:afind]{stringdist::afind()}}
with a preference for \code{q = 3}, but constrained to the minimum number of characters
of any string in \code{swap_out} or \code{swap_out}.
}
\examples{
messy_words <- c(
  "ID #", # ID
  "Barcode", # Code
  "Product\nName", # Name
  "Day of \n the week", # Day
  "Month (MMM) ", # Month
  "Amount $" # Amount
)

clean_words <- c(
  "Amount",
  "Month ",
  "Day",
  "Name",
  "Code",
  "ID"
)

swapped_words <- fuzzy_match(
  swap_out = messy_words,
  swap_in = clean_words
)
swapped_words # order preserved, best matches substituted


# categorize and handle spelling mistakes from OCR text
color_phrases <- c(
  "The sunrise was 'yellovv'",
  "There were 'purp/e' flowers",
  "The fruit was 'orang e'"
)

# swap_in can be any length >= swap_out
colors_list <- c(
  "Red",
  "Blue",
  "Green",
  "Yellow",
  "Violet",
  "Purple",
  "Orange"
)

# a notice will be shown where there is a potential incompatible fuzzy match
colors_mentioned <- fuzzy_match(color_phrases, colors_list)

writeLines(paste0(
  "The colors mentioned were: ",
  paste0(colors_mentioned, collapse = ", ")
))
}
